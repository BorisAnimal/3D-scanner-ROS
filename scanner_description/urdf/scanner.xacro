<?xml version="1.0"?>
<!-- Revolute-Revolute Manipulator -->
<robot name="scanner" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="mass" value="1" /> <!-- arbitrary value for mass -->
  <xacro:property name="width" value="0.1" /> <!-- Square dimensions (widthxwidth) of beams -->
  <xacro:property name="l0" value="${2 * axel_offset}" /> <!-- Link 1 -->
  <xacro:property name="l1" value="1.55" /> <!-- Link 2 -->
  <xacro:property name="l2" value="1.8" /> <!-- Link 3 -->

  <!-- Edit the last heigh as the axes is hitting the ground -->
  <xacro:property name="h" value="${l0 + l1 + l2 + 4 * axel_offset}" /> <!-- (Height of construction -->

  <xacro:property name="camera_link" value="0.05" /> <!-- Size of square 'camera' box -->
  <xacro:property name="axel_offset" value="0.05" /> <!-- Space btw top of beam and the each joint -->

  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <!-- <xacro:include filename="$(find rrbot_description)/urdf/rrbot.gazebo" /> -->
  <!-- Import Rviz colors -->
  <!-- <xacro:include filename="$(find rrbot_description)/urdf/materials.xacro" /> -->

  <!-- Used for fixing robot to Gazebo 'base_link' -->
  <link name="world"/>

  <joint name="joint0" type="continuous">
    <parent link="world"/>
    <child link="link1"/>
    <limit effort="1000.0" lower="0.0" upper="${PI*2}" velocity="0.5"/>
    <origin xyz="0 0 ${h}" rpy="0 ${PI} 0"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.7"/>

  </joint>

  <!-- First transformation link -->
  <link name="link1">
    <collision>
      <origin xyz="0 0 ${l0/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${l0}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${l0/2}" rpy="0 0 0"/> <!-- Shit moment #1-->
      <geometry>
	<box size="${width} ${width} ${l0}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${l0/2}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
	  ixx="${mass / 12.0 * (width*width + l0*l0)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (l0*l0 + width*width)}" iyz="0.0"
	  izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <joint name="joint1" type="revolute">
    <parent link="link1"/>
    <child link="link2"/>
    <limit effort="19000.0" lower="${-PI/2}" upper="${PI/2}" velocity="0.5"/>
    <origin xyz="0 ${width} ${l0}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.7"/>
  </joint>

  <!-- Middle Link -->
  <link name="link2">
    <collision>
      <origin xyz="0 0 ${l1/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${l1}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${l1/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${l1}"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${l1/2}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
	  ixx="${mass / 12.0 * (width*width + l1*l1)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (l1*l1 + width*width)}" iyz="0.0"
	  izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <joint name="joint2" type="revolute">
    <parent link="link2"/>
    <child link="link3"/>
    <limit effort="1000.0" lower="${-PI/2}" upper="${PI/2}" velocity="0.5"/>
    <origin xyz="0 ${width} ${l1}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.7"/>
  </joint>

  <!-- Top Link -->
  <link name="link3">
    <collision>
      <origin xyz="0 0 ${l2/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${l2}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${l2/2}" rpy="0 0 0"/>
      <geometry>
	      <box size="${width} ${width} ${l2}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${l2/2}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
	  ixx="${mass / 12.0 * (width*width + l2*l2)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (l2*l2 + width*width)}" iyz="0.0"
	  izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <joint name="camera_joint" type="revolute">
    <parent link="link3"/>
    <child link="kinect_link"/>
    <limit effort="1000.0" lower="${-PI/2}" upper="${PI/2}" velocity="0.1"/>
    <origin xyz="0 0 ${l2 + width}" rpy="${-PI/2} ${-PI/2} ${-PI/2} "/>
    <axis xyz="0 1 0" />
  </joint>

      

  <link name="kinect_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	     <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <!-- <collision name="collision">
      <geometry>
        <box>
          <size>0.073000 0.276000 0.072000</size>
        </box>
      </geometry>
    </collision> -->
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
       <box size="0.1 0.1 0.1"/>
      </geometry>
    </visual>
    <!-- <visual name="visual">
      <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh>
            <uri>model://kinect/meshes/kinect.dae</uri>
          </mesh>
        </geometry>
    </visual> -->

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>

  </link>


  <!--                GAZEBO RELATED PART                             -->

  <!-- ROS Control plugin for Gazebo -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/scanner</robotNamespace>
    </plugin>
  </gazebo>

  <!-- transmission -->
  <transmission name="tran0">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint0">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor0">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tran3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="camera_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_kinect">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <!-- Here we go -->
  <gazebo reference="kinect_link">
    <!-- <sensor type="depth" name="camera1">
        <always_on>1</always_on>
        <visualize>true</visualize>              -->
    <sensor name="camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
        <!-- <camera>
            <horizontal_fov>1.047</horizontal_fov>  
            <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
            </image>
            <depth_camera>

            </depth_camera>
            <clip>
                <near>0.1</near>
                <far>100</far>
            </clip>
        </camera> -->
        <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>1.0</updateRate>
          <cameraName>camera</cameraName>
          <frameName>kinect_link</frameName>                   
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>              
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>            
          <pointCloudCutoff>0.4</pointCloudCutoff>                
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
          <CxPrime>0.0</CxPrime>
          <Cx>0.0</Cx>
          <Cy>0.0</Cy>
          <focalLength>0.0</focalLength>
        </plugin>
    </sensor>
  </gazebo>

  
<!-- <pose>0 0 0.036 0 0 0</pose>
    
      
        <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>

          <updateRate>0.0</updateRate>
          <cameraName>camera_ir</cameraName>
          <imageTopicName>/camera/depth/image_raw</imageTopicName>
          <cameraInfoTopicName>/camera/depth/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
          <depthImageInfoTopicName>/camera/depth/camera_info</depthImageInfoTopicName>
          <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
          <frameName>camera_link</frameName>
          <pointCloudCutoff>0.05</pointCloudCutoff>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
      </sensor>
    </link> -->
  <!-- Here we finish -->
</robot>
